[mgr]
prepend_keymap = [

	# Smart paste
	{ on = "p", run = "plugin smart-paste", desc = "smart paste to hovered dir or cwd"},

	# Smart Enter
	{ on = "l", run = "plugin smart-enter", desc = "Enter dir or open file"},
	{ on = "<Enter>", run = "plugin smart-enter", desc = "Enter dir or open file"},

	# Bunny
	{ desc = "Start bunny.yazi",on = ";", run = "plugin bunny"},
	{ desc = "Start bunny.yazi fuzzy search", on = "'", run = "plugin bunny fuzzy" },
	
	{ on  = "<C-n>", run = 'shell -- dragon-drop -x -i -T "$@"', desc = "Drag and drop" },
    # Mount
    { on = [ "M", "m" ], run = "plugin gvfs -- select-then-mount", desc = "Select device then mount" },
    # or this if you want to jump to mountpoint after mounted
    { on = [ "M", "m" ], run = "plugin gvfs -- select-then-mount --jump", desc = "Select device to mount and jump to its mount point" },

    # This will remount device under current working directory (cwd)
    #   -> cwd = /run/user/1000/gvfs/DEVICE_1/FOLDER_A
    #   -> device mountpoint = /run/user/1000/gvfs/DEVICE_1
    #   -> remount this DEVIEC_1 if needed
    { on = [ "M", "R" ], run = "plugin gvfs -- remount-current-cwd-device", desc = "Remount device under cwd" },

    { on = [ "M", "u" ], run = "plugin gvfs -- select-then-unmount", desc = "Select device then unmount" },
    # Or this if you want to unmount and eject device.
    #   -> Ejected device can safely be removed.
    #   -> Ejecting a device will unmount all paritions/volumes under it.
    #   -> Fallback to normal unmount if not supported by device.
    { on = [ "M", "u" ], run = "plugin gvfs -- select-then-unmount --eject", desc = "Select device then eject" },

    # Also support force unmount/eject.
    #   -> Ignore outstanding file operations when unmounting or ejecting
    { on = [ "M", "U" ], run = "plugin gvfs -- select-then-unmount --eject --force", desc = "Select device then force to eject/unmount" },

    # Add Scheme/Mount URI:
    #   -> Available schemes: mtp, gphoto2, smb, sftp, ftp, nfs, dns-sd, dav, davs, dav+sd, davs+sd, afp, afc, sshfs
    #   -> Read more about the schemes here: https://wiki.gnome.org/Projects(2f)gvfs(2f)schemes.html
    #   -> Explain about the scheme:
    #       -> If it shows like this: {ftp,ftps,ftpis}://[user@]host[:port]
    #       -> Every value within [] is optional. For values within {}, you must choose exactly one. All others are required.
    #       -> Example: {ftp,ftps,ftpis}://[user@]host[:port] => ip and port: "ftp://myusername@192.168.1.2:9999" or domain: "ftps://myusername@github.com"
    #       -> More examples: smb://user@192.168.1.2/share, smb://WORKGROUP;user@192.168.1.2/share, sftp://user@192.168.1.2/, ftp://192.168.1.2/
    # !WARNING: - Scheme/Mount URI shouldn't contain password.
    #           - Google Drive, One drive are listed automatically via GNOME Online Accounts (GOA). Avoid adding them.
    #           - MTP, GPhoto2, AFC, Hard disk/drive, fstab with x-gvfs-show are listed automatically. Avoid adding them.
    #           - ssh:// is alias for sftp://. Both don't support [/share]. Everything will still work if you accidentally add it.
    #             -> {sftp,ssh}://[user@]host[:port]. Host can be Host alias in .ssh/config file, ip or domain.
    #             -> For example (home is Host alias in .ssh/config file: Host home):
    #                  -> ssh://user_name@home/home/user_name -> this won't mount subfolder /home/user_name, but the root path /
    #                  -> sftp://user_name@192.168.1.2/home/user_name -> same as above
    { on = [ "M", "a" ], run = "plugin gvfs -- add-mount", desc = "Add a GVFS mount URI" },

    # Edit a Scheme/Mount URI
    #   -> Will clear saved passwords for that mount URI.
    { on = [ "M", "e" ], run = "plugin gvfs -- edit-mount", desc = "Edit a GVFS mount URI" },

    # Remove a Scheme/Mount URI
    #   -> Will clear saved passwords for that mount URI.
    { on = [ "M", "r" ], run = "plugin gvfs -- remove-mount", desc = "Remove a GVFS mount URI" },

    # Jump
    { on = [ "g", "m" ], run = "plugin gvfs -- jump-to-device", desc = "Select device then jump to its mount point" },
    # If you use `x-systemd.automount` in /etc/fstab or manually added automount unit,
    # then you can use `--automount` argument to auto mount device before jump.
    # Otherwise it won't show up in the jump list.
    { on = [ "g", "m" ], run = "plugin gvfs -- jump-to-device --automount", desc = "Automount then select device to jump to its mount point" },
    { on = [ "`", "`" ], run = "plugin gvfs -- jump-back-prev-cwd", desc = "Jump back to the position before jumped to device" },
]
